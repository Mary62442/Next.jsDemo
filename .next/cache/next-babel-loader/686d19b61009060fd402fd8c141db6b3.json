{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diegomary\\\\Desktop\\\\next-demo\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\"; //next/link does all the location.history handling for you\n\nimport Layout from '../components/MyLayout';\nimport fetch from 'isomorphic-unfetch'; // Basic dynamic routing\n\n/* const PostLink = props => (\r\n    <li>\r\n      <Link href={`/post1?title=${props.title}`}>\r\n        <a>{props.title}</a>\r\n      </Link>\r\n    </li>\r\n); */\n// Clean URL dynamic routing\n// History Awareness: dynamic routing works pretty nicely with the browser history\n\nconst PostLink = props => __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${props.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, props.id)));\n\nconst App = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"Hello World\"), __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"Hello everywone, this is text in a paragraph tag that is rendered in the page source!\"), __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, props.shows.map(show => __jsx(PostLink, {\n  key: show.id,\n  id: show.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n})))));\n\nApp.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/diegomary/Desktop/next-demo/pages/index.js"],"names":["Link","Layout","fetch","PostLink","props","id","App","shows","map","show","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB,C,CAA8B;;AAC9B,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA;;;;;;;AAQA;AACA;;AACA,MAAMC,QAAQ,GAAGC,KAAK,IACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKA,KAAK,CAACC,EAAG,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,KAAK,CAACC,EAAV,CADF,CADF,CADF;;AAQA,MAAMC,GAAG,GAAIF,KAAD,IACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACCA,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB,MAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,IAAI,CAACJ,EAApB;AAAwB,EAAA,EAAE,EAAEI,IAAI,CAACJ,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADH,CADD,CAJJ,CADJ,CADJ;;AAeAC,GAAG,CAACI,eAAJ,GAAsB,kBAAiB;AACnC,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACLT,IAAAA,KAAK,EAAEK,IAAI,CAACJ,GAAL,CAASS,KAAK,IAAIA,KAAK,CAACR,IAAxB;AADF,GAAP;AAGH,CATD;;AAWA,eAAeH,GAAf","sourcesContent":["import Link from \"next/link\"; //next/link does all the location.history handling for you\r\nimport Layout from '../components/MyLayout';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n// Basic dynamic routing\r\n/* const PostLink = props => (\r\n    <li>\r\n      <Link href={`/post1?title=${props.title}`}>\r\n        <a>{props.title}</a>\r\n      </Link>\r\n    </li>\r\n); */\r\n\r\n// Clean URL dynamic routing\r\n// History Awareness: dynamic routing works pretty nicely with the browser history\r\nconst PostLink = props => (\r\n  <li>\r\n    <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\r\n      <a>{props.id}</a>\r\n    </Link>\r\n  </li>\r\n);\r\n\r\nconst App = (props) => (\r\n    <div>\r\n        <Layout>\r\n            <h1>Hello World</h1>\r\n            <p>Hello everywone, this is text in a paragraph tag that is rendered in the page source!</p>            \r\n            <h1>Batman TV Shows</h1>\r\n            <ul>\r\n            {props.shows.map(show => (\r\n                <PostLink key={show.id} id={show.id}  />                \r\n            ))}\r\n            </ul>\r\n        </Layout>\r\n    </div>\r\n);\r\n\r\nApp.getInitialProps = async function() {\r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n    const data = await res.json();\r\n  \r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n  \r\n    return {\r\n      shows: data.map(entry => entry.show)\r\n    };\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}