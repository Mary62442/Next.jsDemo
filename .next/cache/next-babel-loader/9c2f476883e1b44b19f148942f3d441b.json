{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\diegomary\\\\Desktop\\\\next-demo\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\"; //next/link does all the location.history handling for you\n\nimport Layout from '../components/MyLayout';\nimport fetch from 'isomorphic-unfetch'; // Basic dynamic routing\n\n/* const PostLink = props => (\r\n    <li>\r\n      <Link href={`/post1?title=${props.title}`}>\r\n        <a>{props.title}</a>\r\n      </Link>\r\n    </li>\r\n); */\n// Clean URL dynamic routing\n// History Awareness: dynamic routing works pretty nicely with the browser history\n\nvar PostLink = function PostLink(props) {\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.id)));\n};\n\nvar App = function App(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Hello World\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Hello everywone, this is text in a paragraph tag that is rendered in the page source!\"), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(PostLink, {\n      key: show.id,\n      id: show.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }))));\n};\n\nApp.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/diegomary/Desktop/next-demo/pages/index.js"],"names":["Link","Layout","fetch","PostLink","props","id","App","shows","map","show","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB,C,CAA8B;;AAC9B,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA;;;;;;;AAQA;AACA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,eAAQA,KAAK,CAACC,EAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACC,EAAV,CADF,CADF,CADoB;AAAA,CAAtB;;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACF,KAAD;AAAA,SACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACjB,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACJ,EAApB;AAAwB,MAAA,EAAE,EAAEI,IAAI,CAACC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAApB,CADD,CAJJ,CADJ,CADQ;AAAA,CAAZ;;AAeAJ,GAAG,CAACK,eAAJ,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACAT,KAAK,CAAC,8CAAD,CADL;;AAAA;AACZU,UAAAA,GADY;AAAA;AAAA,2CAECA,GAAG,CAACC,IAAJ,EAFD;;AAAA;AAEZC,UAAAA,IAFY;AAIlBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJkB,2CAMX;AACLV,YAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAAS,UAAAU,KAAK;AAAA,qBAAIA,KAAK,CAACT,IAAV;AAAA,aAAd;AADF,WANW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAWA,eAAeH,GAAf","sourcesContent":["import Link from \"next/link\"; //next/link does all the location.history handling for you\r\nimport Layout from '../components/MyLayout';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n// Basic dynamic routing\r\n/* const PostLink = props => (\r\n    <li>\r\n      <Link href={`/post1?title=${props.title}`}>\r\n        <a>{props.title}</a>\r\n      </Link>\r\n    </li>\r\n); */\r\n\r\n// Clean URL dynamic routing\r\n// History Awareness: dynamic routing works pretty nicely with the browser history\r\nconst PostLink = props => (\r\n  <li>\r\n    <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\r\n      <a>{props.id}</a>\r\n    </Link>\r\n  </li>\r\n);\r\n\r\nconst App = (props) => (\r\n    <div>\r\n        <Layout>\r\n            <h1>Hello World</h1>\r\n            <p>Hello everywone, this is text in a paragraph tag that is rendered in the page source!</p>            \r\n            <h1>Batman TV Shows</h1>\r\n            <ul>\r\n            {props.shows.map(show => (\r\n                <PostLink key={show.id} id={show.name}  />                \r\n            ))}\r\n            </ul>\r\n        </Layout>\r\n    </div>\r\n);\r\n\r\nApp.getInitialProps = async function() {\r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n    const data = await res.json();\r\n  \r\n    console.log(`Show data fetched. Count: ${data.length}`);\r\n  \r\n    return {\r\n      shows: data.map(entry => entry.show)\r\n    };\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}